<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- 配置加载属性文件-->
    <context:property-placeholder location="classpath:props/*.properties"/>

    <!-- 导入数据访问配置文件-->
    <import resource="classpath:applicationContext-mapper.xml"/>

    <!-- ############## 配置dubbo 服务提供者############## -->
    <!-- 配置当前应用的名称-->
    <dubbo:application name="pinyougou-sellergoods-service"/>

    <!-- 配置zookeeper 作为注册中心，注册服务地址-->
    <dubbo:registry protocol="zookeeper" address="192.168.224.129:2181"/>

    <!-- 用dubbo 协议在20880 端口暴露服务-->
    <dubbo:protocol name="dubbo" port="20880"/>

    <!-- 配置采用包扫描来暴露服务-->
    <dubbo:annotation package="com.pinyougou.sellergoods.service.impl"/>

    <!-- ##### 配置http请求URL拦截规则 ##### -->
    <!-- 配置哪些请求URL不需要拦截 -->
    <security:http pattern="/login.html" security="none"/>

    <security:http>
        <!-- 配置拦截的请求URL，需要用什么角色访问 ROLE_* -->
        <security:intercept-url pattern="/**" access="hasRole('USER')"/>
        <!-- 配置表单登录 -->
        <security:form-login login-page="/login.html"
                             login-processing-url="/login"
                             username-parameter="username"
                             password-parameter="password"
                             default-target-url="/login_success.html"
                             always-use-default-target="true"
                             authentication-failure-url="/login.html"/>
        <!-- 关闭CSRF跨站点请求伪造 -->
        <security:csrf disabled="true"/>
    </security:http>

    <!-- ######### 配置身份认证管理器 ########## -->
    <security:authentication-manager>
        <!-- 配置认证提供者 -->
        <security:authentication-provider>
        <!-- 配置用户服务作为，认证的提供者 -->
            <security:user-service>
        <!-- 配置一个用户: 用户名、密码、授权(角色) -->
                <security:user name="admin" password="123456" authorities="ROLE_USER"/>
            </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager>
</beans>